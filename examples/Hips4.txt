		Hips model 4: Comparative
								analysis of Stanmore &
								Charnley incorporating evidence

Spiegelhalter, D.J. and Best, N.G. á° Bayesian approaches to multiple sources of evidence and uncertainty in complex cost-effectiveness modellingá´ . Statistics in Medicine 22, (2003), 3687-3709.

n = 10000 updates (1 per simulated set of parameter values) are required for this model; 
For hazard ratio estimates in bottom of table 4, monitor HR. For results in table 5, monitor C.incr, BQ.incr, ICER.strata, mean.C.incr, mean.BQ.incr, mean.ICER, P.CEA.strata[30,],
P.CEA.strata[50,], P.CEA[30] and P.CEA[50]. To produce plots in Fig 2, use coda option to save samples of C.incr, BQ.incr, mean.C.incr, mean.BQ.incr. To produce plots in Fig 3, set summary monitors on P.CEA.strata and P.CEA to get posterior means

Sections of the code that have changed from Model 1 are shown in bold


	model {

	# Evidence
	#########

		for (i in 1 : M){                                # loop over studies
			rC[i] ~ dbin(pC[i], nC[i])              # number of revisions on Charnley
			rS[i] ~ dbin(pS[i], nS[i])              # number of revisions on Stanmore
			cloglog(pC[i]) <- base[i] - logHR[i]/2  
			cloglog(pS[i]) <- base[i] + logHR[i]/2 
			base[i] ~ dunif(-100,100)                 
			# log hazard ratio for ith study
			logHR[i] ~ dnorm(LHR,tauHR[i]) 
			tauHR[i] <- qualweights[i] * tauh    # precision for ith study weighted by quality weights
		} 
		LHR ~ dunif(-100,100) 
		log(HR) <- LHR 
		tauh <- 1 / (sigmah * sigmah) 
		sigmah ~ dnorm( 0.2, 400)C(0, )        # between-trial sd = 0.05 (prior constrained to be positive)

		for(k in 1 : K) { 
			logh[k] ~ dnorm(logh0[k], tau)
			h[1, k] <- exp(logh[k])                         # revision hazard for Charnley
			h[2, k] <- HR * h[1, k]                           # revision hazard for Stanmore
		}

		# Cost-effectiveness model
		###################### 

		for(k in 1 : K) {    # loop over strata

			for(n in 1 : 2) {     # loop over protheses

			# Cost and benefit equations in closed form:
			####################################

			# Costs
				for(t in 1 : N) {
					ct[n, k, t] <- inprod(pi[n, k, t, ], c[n, ]) / pow(1 + delta.c, t - 1)
				} 
				C[n,k] <- C0[n] + sum(ct[n, k, ])

				# Benefits - life expectancy
				for(t in 1 : N) {
					blt[n, k, t] <- inprod(pi[n, k, t, ], bl[]) / pow(1 + delta.b, t - 1)
				} 
				BL[n, k] <- sum(blt[n, k, ])

				# Benefits - QALYs
				for(t in 1 : N) {
					bqt[n, k, t] <- inprod(pi[n, k, t, ], bq[]) / pow(1 + delta.b, t - 1)
				} 
				BQ[n, k] <- sum(bqt[n, k, ])

				# Markov model probabilities:
				#######################

				# Transition matrix
				for(t in 2:N) {
					Lambda[n, k, t, 1, 1] <- 1 -  gamma[n, k, t] - lambda[k, t]
					Lambda[n, k, t, 1, 2] <- gamma[n, k, t] * lambda.op
					Lambda[n, k, t, 1, 3] <- gamma[n, k, t] *(1 - lambda.op)
					Lambda[n, k, t, 1, 4] <- 0
					Lambda[n, k, t, 1, 5] <- lambda[k, t] 

					Lambda[n, k, t, 2, 1] <- 0
					Lambda[n, k, t, 2, 2] <- 0 
					Lambda[n, k, t, 2, 3] <- 0 
					Lambda[n, k, t, 2, 4] <- 0 
					Lambda[n, k ,t, 2, 5] <- 1 

					Lambda[n, k, t, 3, 1] <- 0
					Lambda[n, k, t, 3, 2] <- 0 
					Lambda[n, k, t, 3, 3] <- 0
					Lambda[n, k, t, 3, 4] <- 1 -  lambda[k, t]
					Lambda[n, k, t, 3, 5] <- lambda[k, t]

					Lambda[n, k, t, 4, 1] <- 0
					Lambda[n, k, t, 4, 2] <- rho * lambda.op
					Lambda[n, k, t, 4, 3] <- rho * (1 -  lambda.op)
					Lambda[n, k, t, 4, 4] <- 1 - rho - lambda[k, t]
					Lambda[n, k, t, 4, 5] <- lambda[k, t]

					Lambda[n, k, t, 5, 1] <- 0
					Lambda[n, k, t, 5, 2] <- 0 
					Lambda[n, k, t, 5, 3] <- 0
					Lambda[n, k, t, 5, 4] <- 0
					Lambda[n, k, t, 5, 5] <- 1

					gamma[n, k, t] <- h[n, k] * (t - 1)
				}

				# Marginal probability of being in each state at time 1
				pi[n, k, 1, 1] <- 1 - lambda.op   pi[n, k, 1, 2] <- 0      pi[n, k, 1, 3] <- 0 
				pi[n, k, 1, 4] <- 0  pi[n, k, 1, 5] <- lambda.op

				# Marginal probability of being in each state at time t>1
				for(t in 2 : N) {
					for(s in 1 : S) {
						pi[n, k,t, s] <- inprod(pi[n, k, t - 1, ], Lambda[n, k, t, , s])
					}
				}
			}
		}

		# Incremental costs and benefits
		##########################

		for(k in 1 : K) {
			C.incr[k] <- C[2, k] - C[1, k]
			BQ.incr[k] <-BQ[2, k] - BQ[1, k]
			ICER.strata[k] <- C.incr[k] / BQ.incr[k]
		} 

		# Probability of cost effectiveness @ KK pounds per QALY
		# (values of KK considered range from 200 to 20000 in 200 pound increments)
		for(m in 1 : 100) {
			for(k in 1 : 12) {  
				P.CEA.strata[m,k] <- step(KK[m] * BQ.incr[k] - C.incr[k])
			}
			P.CEA[m] <- step(KK[m] * mean.BQ.incr - mean.C.incr)
		}

		# overall incremental costs and benefit 
		for(n in 1 : 2) {
			mean.C[n] <- inprod(p.strata[], C[n, ])
			mean.BQ[n] <- inprod(p.strata[], BQ[n, ])
		}
		mean.C.incr <- mean.C[2] - mean.C[1]
		mean.BQ.incr <- mean.BQ[2] - mean.BQ[1]
		mean.ICER <- mean.C.incr / mean.BQ.incr  

	}


Data ( click to open )

InitsÂ forÂ chainÂ 1	InitsÂ forÂ chainÂ 2 ( click to open )



Results


(quality weights c(0.5, 1, 0.2), delta.c = 0.06,  delta.b = 0.06)
		mean	sd	MC_error	val2.5pc	median	val97.5pc	start	sample
	BQ.incr[1]	0.1383	0.06414	0.003258	0.001302	0.1412	0.2548	1001	10000
	BQ.incr[2]	0.1149	0.0529	0.002644	9.543E-4	0.1179	0.2101	1001	10000
	BQ.incr[3]	0.08288	0.03847	0.001888	8.299E-4	0.0845	0.1544	1001	10000
	BQ.incr[4]	0.03866	0.01808	8.569E-4	3.314E-4	0.03925	0.07271	1001	10000
	BQ.incr[5]	0.01998	0.009382	4.44E-4	2.055E-4	0.02029	0.03746	1001	10000
	BQ.incr[6]	0.01341	0.006324	2.989E-4	1.248E-4	0.01359	0.02534	1001	10000
	BQ.incr[7]	0.1297	0.06022	0.00305	0.001197	0.1327	0.2392	1001	10000
	BQ.incr[8]	0.1111	0.05135	0.002556	0.001031	0.1137	0.2046	1001	10000
	BQ.incr[9]	0.08478	0.03952	0.001949	8.041E-4	0.0866	0.1584	1001	10000
	BQ.incr[10]	0.04102	0.01925	9.264E-4	4.158E-4	0.0417	0.07684	1001	10000
	BQ.incr[11]	0.02181	0.01024	4.832E-4	2.381E-4	0.02198	0.04115	1001	10000
	BQ.incr[12]	0.01519	0.007122	3.333E-4	1.644E-4	0.0154	0.02869	1001	10000
	C.incr[1]	-101.5	260.1	13.35	-569.0	-114.1	462.0	1001	10000
	C.incr[2]	-36.23	216.9	10.99	-419.5	-50.46	436.2	1001	10000
	C.incr[3]	63.61	159.3	7.947	-227.8	54.9	408.0	1001	10000
	C.incr[4]	212.8	75.47	3.659	73.4	209.2	375.5	1001	10000
	C.incr[5]	278.1	39.47	1.91	206.6	276.3	362.8	1001	10000
	C.incr[6]	301.7	26.6	1.284	252.8	300.6	358.8	1001	10000
	C.incr[7]	-73.78	242.4	12.4	-507.8	-88.48	454.1	1001	10000
	C.incr[8]	-22.27	209.2	10.57	-398.8	-35.68	434.9	1001	10000
	C.incr[9]	58.59	162.5	8.14	-235.0	48.23	409.0	1001	10000
	C.incr[10]	205.2	79.87	3.919	59.07	201.3	376.9	1001	10000
	C.incr[11]	272.1	42.8	2.063	193.3	270.6	363.4	1001	10000
	C.incr[12]	295.7	29.79	1.427	240.6	294.5	360.5	1001	10000
	HR	0.6081	0.1656	0.008509	0.3551	0.5874	0.9961	1001	10000
	ICER.strata[1]	2.271	38940.0	364.3	-2611.0	-892.4	13260.0	1001	10000
	ICER.strata[2]	533.1	44550.0	408.1	-2459.0	-520.6	14740.0	1001	10000
	ICER.strata[3]	1764.0	51670.0	484.0	-2128.0	547.1	20100.0	1001	10000
	ICER.strata[4]	7664.0	104900.0	971.6	-444.6	5097.0	42210.0	1001	10000
	ICER.strata[5]	17610.0	211400.0	1979.0	2869.0	13220.0	81800.0	1001	10000
	ICER.strata[6]	28480.0	274800.0	2521.0	6432.0	21500.0	120700.0	1001	10000
	ICER.strata[7]	188.5	40180.0	374.0	-2613.0	-746.4	13920.0	1001	10000
	ICER.strata[8]	579.6	41530.0	385.1	-2429.0	-395.4	15800.0	1001	10000
	ICER.strata[9]	1809.0	54810.0	510.6	-2111.0	449.9	2.0E+4	1001	10000
	ICER.strata[10]	6927.0	105400.0	920.1	-635.6	4605.0	39470.0	1001	10000
	ICER.strata[11]	15640.0	176200.0	1638.0	2479.0	11890.0	73200.0	1001	10000
	ICER.strata[12]	24330.0	241500.0	2193.0	5189.0	18590.0	106300.0	1001	10000
	P.CEA[30]	0.744	0.4364	0.01812	0.0	1.0	1.0	1001	10000
	P.CEA[50]	0.8574	0.3497	0.01438	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,1]	0.9188	0.2731	0.01057	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,2]	0.9074	0.2899	0.01143	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,3]	0.8757	0.3299	0.01312	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,4]	0.5666	0.4955	0.02014	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,5]	0.0409	0.1981	0.004729	0.0	0.0	1.0	1001	10000
	P.CEA.strata[30,6]	4.0E-4	0.02	2.451E-4	0.0	0.0	0.0	1001	10000
	P.CEA.strata[30,7]	0.9146	0.2795	0.01089	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,8]	0.9052	0.2929	0.01151	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,9]	0.8781	0.3272	0.01297	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,10]	0.6104	0.4877	0.01986	0.0	1.0	1.0	1001	10000
	P.CEA.strata[30,11]	0.0754	0.264	0.007068	0.0	0.0	1.0	1001	10000
	P.CEA.strata[30,12]	0.0016	0.03997	4.735E-4	0.0	0.0	0.0	1001	10000
	P.CEA.strata[50,1]	0.9418	0.2341	0.008782	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,2]	0.9369	0.2431	0.009177	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,3]	0.9163	0.2769	0.01079	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,4]	0.7838	0.4117	0.01645	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,5]	0.2709	0.4444	0.01603	0.0	0.0	1.0	1001	10000
	P.CEA.strata[50,6]	0.0252	0.1567	0.003143	0.0	0.0	1.0	1001	10000
	P.CEA.strata[50,7]	0.9408	0.236	0.008916	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,8]	0.936	0.2448	0.00935	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,9]	0.9194	0.2722	0.0105	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,10]	0.8022	0.3983	0.01602	0.0	1.0	1.0	1001	10000
	P.CEA.strata[50,11]	0.3525	0.4777	0.01845	0.0	0.0	1.0	1001	10000
	P.CEA.strata[50,12]	0.0637	0.2442	0.005955	0.0	0.0	1.0	1001	10000
	mean.BQ.incr	0.0494	0.02176	0.00112	4.718E-4	0.05142	0.0861	1001	10000
	mean.C.incr	179.2	91.29	4.709	25.58	170.5	385.1	1001	10000
	mean.ICER	5125.0	84760.0	778.9	-503.9	3132.0	33060.0	1001	10000




